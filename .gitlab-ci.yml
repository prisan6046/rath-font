
stages:
  - release

release:
  stage: release
  image : docker:latest
  tags: [docker]
  services:
    - docker:dind
  environment:
    name: Development
  cache:
    key: my-cache
    paths:
      -  node_modules
  variables:
    DOCKER_TLS_CERTDIR: ""
  script:
      -  docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      -  docker build --pull -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
      -  docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

# deploy:
#   stage: deploy
#   image: ubuntu
#   tags: [docker]
#   services:
#     - docker:dind
#   before_script:
#     - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
#     - eval $(ssh-agent -s)
#     - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#   script:
#     - ssh -o "StrictHostKeyChecking=no" -p22 $TARGET_USER 
#     - ssh -p22 $TARGET_USER "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
#     - ssh -p22 $TARGET_USER "docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
#     - ssh -p22 $TARGET_USER "docker stop ruth-font-new"
#     - ssh -p22 $TARGET_USER "docker rm ruth-font-new"
#     - ssh -p22 $TARGET_USER "docker run --restart=always -d --name ruth-font-new -p 5000:5000 $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"

#   only :
#     - master